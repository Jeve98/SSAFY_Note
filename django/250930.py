"""
[250920]

<Django 라이브 강의>

HTTP : HTML 문서와 같은 리소스들을 가져올 수 있도록 하는 규약으로 Request-Response 구조로 이루어짐
- 비연결 지향(connectionless) : 서버는 요청에 대한 응답 이후 연결을 끊음으로써 수많은 연결이 서버의 메모리와 자원을 차지하지 않도록 구성함
- 무상태(stateless) : 다수의 서버 운영 시에 클라이언트 상태 공유를 위해 모든 서버가 연결되어야 하는 등, 확장성 문제 해결을 위해 연결이 끝나는 순간 통신이 끝나며 상태 정보가 유지되지 않음
    >> 로그인 상태/유저의 정보와 같은 상태를 유지할 수 없음
    
    - Cookie : 서버가 사용자의 웹 브라우저에 Set-Cookie 필드를 통해 전송하는 작은 데이터 조각으로 key-value 형태로 사용자 인증, 추적, 상태 유지 등에 사용
        ex) 세션 관리(로그인 유지, 장바구니 등 정보 관리), 추적/수집(행동 기록 및 분석), 개인화(언어-테마 등 사용자 설정 기억)
    - Session : 서버 측에서 생성되어 클라이언트와 서버 간의 상태를 유지 및 저장하는 데이터 저장 방식으로 세션 ID를 클라이언트에게 제공하고 이를 쿠기에 저장하여 요청 시에 확인


Authentication : 사용자 식별을 위해 필요한 과정
ex) 기본 인증(IP/PW), OAuth(소셜 로그인), 생체인증, ...
- Django Authentication System : 사용자 인증과 관련된 기능을 모아둔 시스템
    - User Model : 인증 후 연결될 user model 관리
        ※ 내장된 auth 앱에 작성된 user 클래스를 사용하기 때문에 제공되는 필드가 매우 제한적이고 변경하기 어려움
        >> Custom User Model 사용 권장
    - Session 관리 : 로그인 상태를 유지하고 서버에 저장하는 방식 관리
    - 기본 인증 : 로그인/로그아웃 등 기본적인 기능 제공

- Login : 인증 완료 이후 Session을 만들어 클라이언트와 연결하는 것
    >> CRUD 中 Create : Session 생성 과정



<실습>


"""