"""
[250908]

<알고리즘 라이브 강의>

알고리즘
- Brute Force > Greedy > DP > 분할 정복 > 특화 알고리즘
    - Brute Force
        - 반복 (n번 반복)
            ex) DFS, BFS, ...
        - 재귀 (n중 반복)
            ex) 순열, 조합, 부분집합, DFS, ...
            * 순열, 중복 순열
            * 부분 집합(powerset, subset) : 어떤 집합의 공집합과 자기 자신을 포함한 모든 부분
                ※ 비트 연산(Binary Counting) : 특정 자리의 1 비트와 i(번째 부분 집합)을 비교하여 부분 집합 생성
            * 조합(Combination) : 부분 집합 중에서, r개를 무조건 선택해야 하는 경우 (순서 없는 순열)

    - Greedy : 현재를 기준으로 가장 좋아 보이는 선택지를 반복하여 선택하는 방법으로 최적해의 합이 최종해임을 보장하지는 않음
        1. 반복되는 규칙 발견
        2. Greedy 검증
            2-1. 탐욕적 선택 조건 (Greedy Choice Property) : 각 단계의 최적해 선택이 이후 단계 선택에 영향을 주지 않을 것
                >> 각 단계의 규칙이 변하지 않을 것
            2-2. 최적 부분 구조 (Optimal Substructure) : 각 단계의 최적해의 합이 최종해가 될 것
                >> 직/간접 증명, 귀납법, 귀류법 등을 이용하여 논리적으로 증명하거나 직관에 따라 반례를 찾을 것

                ex) 동전 문제
                [명제] : 가장 큰 동전부터 고르면 최소 동전 수가 나온다
                [간접 증명 - 귀류법]
                    - 최적해 보다 더 적은 동전으로 표현 가능하다 (가정)
                    == n원을 더 작은 값의 동전으로 더 작은 수로 표현할 수 있다
                    동전이 배수 관계로 있을 경우, 불가능 (모순 발생) - 더 작은 값으로 나누면 무조건 더 큰 수가 반환

        ex) 배수 관계에 있는 동전 교환(변형된 knapsack), fractional knapsack, 활동 선택
            * 동전 교환 : 남은 값보다 작은 값의 동전 중에서 가장 큰 값부터 차례대로 제공
            * fractional knapsack : 물건을 원하는 만큼 자를 수 있는 경우에, 정해진 무게 이하의 최대 가치를 구하는 문제로 단위 무게당 가장 높은 가치의 물건을 선택
            * 활동 선택 : 정해진 단위 시간 내에 최대한의 transaction이 발생하는 횟수를 구하는 문제로 종료시간이 빠른 순으로 선택하거나 활동 시간이 짧은 순으로 선택

    - DP
        ex) 배수 관계가 없는 동전 교환, 0-1 knapsack
            * 0-1 knapsack : 하나씩 존재하는 물건을 선택함에 있어, 정해진 무게 이하의 최대 가치를 구하는 문제


<실습>


"""