"""
[250901]

<알고리즘 라이브 강의>

Hard Logic (논리) :생각이나 주장의 타당성과 옳고 그름을 판별하는 규칙이나 원리
※ Soft Logic (직관) : 경험적, 직관적, 확률적 판단
- 명제 : 참이나 거짓을 알 수 있는 식과 문장
    * 연산 : NOT, AND, OR, XOR(둘 중 하나만 참일 때 참)
    * 조건 명제 ( p -> q)   ※ p가 거짓일 때 q는 항상 참이다
        * 역 ( q -> p )
        * 이 ( ~p -> ~q )
        * 대우 ( ~q -> ~p )
        * 쌍방 조건 명제 ( p <-> q) : 둘의 조건이 동일할 때만 참

    * 직접 증명 : p를 참으로 가정했을 때, q도 참임을 증명하는 방법
        - Trivial Proof (자명한 증명) : p -> q 증명에서 q가 항상 참인 경우
        - Vacuous Proof (공허한 증명) : p -> q 증명에서 p가 항상 거짓인 경우
    * 간접 증명 : 증명해야되는 명제를 변형하여 증명하는 방법
        - 대우에 의한 증명 : 명제와 이의 대우의 결과는 항상 동일하다
        - 모순에 의한 증명
        - 귀류법 : 간접 증명의 한 방식으로 한 명제가 참인 것을 증명하려고 할 때, 그 명제의 부정을 참이라고 가정하여 거기에서 나타나는 불합리성을 증명하는 방법
    * 수학적 귀납법 : 0보다 크거나 같은 정수 범위에 대해 일정한 규칙을 나타내는 명제, p(n)이 성립함을 증명하는 방법
        ex) p(1)이 참이고, p(n)을 참이라고 가정했을 때, p(n+1)이 참이면 p(n)은 모든 자연수 n에 대해서 참이다


재귀 함수 : 자기 자신을 호출하는 함수
- n중 반복문의 구현 : 모든 경우의 수를 확인해야 할 때, 같은 구조가 반복될 때, 다시 되돌아와 재계산해야 할 때 사용

DP
- memoization : 동일한 입력의 함수 호출이 반복되어 일어날 때, 그 결과 값을 저장해두고 재사용하는 방법
- tabulation : 점화식을 바탕으로 아래에서부터 순서대로 계산해나가는 방법


<실습>

Q. 명제 'n^2이 3의 배수이면 n은 3의 배수이다.' 를 증명하라
    본 명제의 대우는 'n이 3의 배수가 아니면 n^2은 3의 배수가 아니다.' 이다
    n이 3의 배수가 아니라는 뜻은 n을 3으로 나누었을 때 나머지가 1 혹은 2로 남는다는 것을 의미한다
    즉, n을 3k+1 혹은 3k+2로 변형할 수 있다
    이를 대우식에 대입하면 다음과 같다
    3k+1 / 3k+2가 3의 배수가 아니면 (참)
    (3k+1)^2 (3(3k^2 + 2k)+1) / (3k+2)^2 (3(3k^2 + 4k + 1)+1)이 3의 배수가 아니다 (참)
    대우식이 참이므로 본 명제는 참이다

Q. T(n) = T(n/2) + 1, T(1) = 1, O() = ?
    T(n) = T(n/2) + 1 = T(n/4) + 2 = ... = T(n/2^k) + k
    이 때, T(n/2^k)가 T(1)이 되려면 n = 2^k 여야 한다
    k를 구하기 위해 양변에 log를 취하면
    k = log n이 되고 이를 본 식에 다시 대입하면 다음과 같다
    T(n) = T(1) + log n = 1 + log n
    O() 표기에서 상수식은 무시하므로 O() = T(n) = log n
    즉, O(log n)이 된다
"""